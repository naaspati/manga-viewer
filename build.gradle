apply plugin: 'java'
apply plugin: 'application'

repositories {
    jcenter()
}

version = '7.2'
sourceCompatibility = JavaVersion.VERSION_1_8 
targetCompatibility = JavaVersion.VERSION_1_8
 
ext.appdir = file(/D:\Core Files\Emulator\dolphin\Manga\Data\Samrock app7\app.beta\bin/)
mainClassName = 'Main'
jar.excludes << 'backup_setting' << 'backups'

dependencies {
    implementation files('myutils.jar')
    
    implementation 'org.slf4j:slf4j-simple:1.8.0-beta4'
    implementation 'org.xerial:sqlite-jdbc:3.7.2'
    implementation 'org.json:json:20180813'
    implementation 'org.codejargon.feather:feather:+'

}

task deleteJars {
  doLast {
     file(appdir).listFiles().each({
       if(it.name.endsWith('.jar'))
         it.delete();
     });
  }
}

task install(type: Copy, dependsOn:[installDist, deleteJars]) {
  def libdir = file(new File(installDist.destinationDir, 'lib')) 
  from libdir
  into appdir
  
  doLast {
     new File(appdir, 'run.cmd').text = """
  @echo off
  setlocal
  
  rem BUILD_TIME ${LocalDateTime.now()}
  
  ${versionText()}
  
  java %JVM_OPTS% %JAVA_OPTS% -cp \"%~dp0;%~dp0${String.join(';%~dp0', libdir.list())}\" ${mainClassName} %*
  
  """.stripIndent()
  } 
}

def versionText() {
  if(!version && version == 'unspecified') return '';
  String s = "echo version: %APP_VERSION% (${java.time.LocalDateTime.now()}^)"
  return """
  SET APP_VERSION=${version}
  if [%1]==[-v] (
    ${s}
    goto:eof
  )
  if [%1]==[--version] (
    ${s}
    goto:eof
  )
  """;    
}

defaultTasks 'install'
